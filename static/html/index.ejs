<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <link rel="stylesheet" href="./css/style.css" />
</head>

<body>
    <div class="container" id="loginSection">
        <h1>MagicPhoneBook</h1>
        <hr />
        <!-- Login/Register Form -->
        <form id="loginForm">
            <h3>Login</h3>

            <label for="loginUsername">Username:</label>
            <input type="text" id="loginUsername" name="username" required>

            <label for="loginPassword">Password:</label>
            <input type="password" id="loginPassword" name="password" required>

            <button type="button"
                onclick="loginUser(document.getElementById('loginUsername').value, document.getElementById('loginPassword').value)"
                class="btn btn-primary">Login</button>
        </form>

        <form id="registerForm">
            <h3>Register</h3>

            <label for="registerUsername">Username:</label>
            <input type="text" id="registerUsername" name="username" required>

            <label for="registerPassword">Password:</label>
            <input type="password" id="registerPassword" name="password" required>

            <br>

            <label for="confirmPassword">Confirm Password: </label>
            <input type="password" id="confirmPassword" name="confirm_password" required>
            <button type="button"
                onclick="registerUser(document.getElementById('registerUsername').value, document.getElementById('registerPassword').value, document.getElementById('confirmPassword').value)"
                class="btn btn-primary">Register</button>
        </form>
    </div>

    <!-- Main Site -->
    <div class="container" id="contentSection" style="display: none;">
        <nav class="navbar bg-body-tertiary">
            <div class="container-fluid">
                <a class="navbar-brand">Wyszukaj</a>
                <div class="d-flex justify-content-center flex-fill">
                    <input id="inputValue" class="form-control me-2" type="search" placeholder="Search"
                        aria-label="Search">
                    <button class="btn btn-outline-success" type="submit"
                        onclick="searchUser(document.getElementById('inputValue').value)">Search
                    </button>
                    <button class="btn btn-outline-danger" onclick="searchUser('')">Clear</button>

                </div>
            </div>
        </nav>
        <header>
            <h1>Address Book</h1>
            <hr />
        </header>
        <table id='table1' class="table table-bordered">
            <thead>
                <tr>
                    <th><button class="btn" style="background-color: transparent;" onclick="sortByCategory('imie')"><i
                                class="fa-solid fa-sort"></i></button>First Name</th>
                    <th><button class="btn" style="background-color: transparent;"
                            onclick="sortByCategory('nazwisko')"><i class="fa-solid fa-sort"></i></button>Last Name</th>
                    <th><button class="btn" style="background-color: transparent;" onclick="sortByCategory('adres')"><i
                                class="fa-solid fa-sort"></i></button>Address</th>
                    <th><button class="btn" style="background-color: transparent;"
                            onclick="sortByCategory('telefon')"><i class="fa-solid fa-sort"></i></button>Phone</th>
                    <th><button class="btn" style="background-color: transparent;" onclick="sortByCategory('mail')"><i
                                class="fa-solid fa-sort"></i></button>Mail</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="contacts">
                <% data.forEach(entry => { %>
                <tr>
                    <td><%= entry.imie %></td>
                    <td><%= entry.nazwisko %></td>
                    <td><%= entry.adres %></td>
                    <td><button class="btn phone-qr" style="background-color:transparent"><%= entry.telefon %></button>
                    </td>
                    <td><%= entry.mail %></td>
                    <td id="delbtn">
                        <div class="text-center">
                            <button id='del{index}' class='btn btn-block' onclick="deleteUser('<%= entry.id %>')">Delete
                            </button>
                        </div>
                    </td>
                </tr>
                <% }) %>
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        <input id='firstName' class='form-control' type="text" />
                    </td>
                    <td>
                        <input id='lastName' class='form-control' type="text" />
                    </td>
                    <td>
                        <input id='address' class='form-control' type="text" />
                    </td>
                    <td>
                        <input id='phone' class='form-control' type="text" />
                    </td>
                    <td>
                        <input id='mail' class='form-control' type="text" />
                    </td>
                    <td>
                        <div class="text-center">
                            <button id='add' class='btn btn-block' onclick=addUser()>
                                Add
                            </button>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>

        <!-- The Modal -->
        <div id="myModal" class="modal">

            <!-- Modal content -->
            <div id="qr-modal" class="modal-content">
                <span class="close">&times;</span>
                <div id="qrcode" style="margin-left: auto; margin-right: auto;"></div>
            </div>

        </div>
    </div>
    <script src="../script/qrcode.min.js"></script>
    <script src="https://kit.fontawesome.com/f1ecbf5ab0.js" crossorigin="anonymous"></script>
    <script>
        // Function to create QR code for a phone number
        function createQRCode(phoneNumber) {
            // Clear the existing QR code content
            const qrcodeElement = document.getElementById("qrcode");
            qrcodeElement.innerHTML = '';

            // Generate the QR code for the provided phone number
            var qrcode = new QRCode(qrcodeElement, {
                width: 200,
                height: 200
            });

            // Get the modal
            var modal = document.getElementById("myModal");

            modal.style.display = "block";
            qrcode.makeCode(phoneNumber);

            // Get the <span> element that closes the modal
            var span = document.getElementsByClassName("close")[0];

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                modal.style.display = "none";
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        }

        function deleteUser(userId) {
            fetch(`/users/${userId}`, {
                method: 'DELETE',
            })
                .then(response => {
                    if (response.ok) {
                        searchUser('');
                        alert('User deleted successfully');
                    } else {
                        console.error('Failed to delete user');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function addUser() {

            const firstName = document.getElementById('firstName').value;
            const lastName = document.getElementById('lastName').value;
            const address = document.getElementById('address').value;
            const phone = document.getElementById('phone').value;
            const mail = document.getElementById('mail').value;

            // Create a user object with the extracted data
            const user = {
                imie: firstName,
                nazwisko: lastName,
                adres: address,
                telefon: phone,
                mail: mail
            };

            console.log(user);

            fetch('/users', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(user),
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        return response.json().then(data => {
                            throw new Error(data.message || 'Failed to add user');
                        });
                    }
                })
                .then(data => {
                    alert(`User added successfully: ${data.message}`);
                    // Optionally reload the website or update the UI
                    searchUser('');
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(`Error: ${error.message}`);
                });

        }

        function searchUser(query) {
            fetch(`/users/search?query=${query}`, {
                method: 'GET',
            })
                .then(response => response.json())
                .then(data => {
                    // Clear the existing table rows
                    const tableBody = document.getElementById('contacts');
                    tableBody.innerHTML = '';

                    // Check whether there are any findings in data
                    if ((Object.keys(data).length) == 0) {
                        alert("No users found!");
                    }

                    // Populate the table with the search results
                    data.forEach(entry => {
                        const newRow = document.createElement('tr');
                        newRow.innerHTML = `
                            <td>${entry.imie}</td>
                            <td>${entry.nazwisko}</td>
                            <td>${entry.adres}</td>
                            <td><button class="btn phone-qr" style="background-color:transparent">${entry.telefon}</button></td>
                            <td>${entry.mail}</td>
                            <td>
                                <div class="text-center">
                                    <button id='del{index}' class='btn btn-block' onclick="deleteUser('${entry.id}')">Delete</button>
                                </div>
                            </td>
                        `;
                        tableBody.appendChild(newRow);
                    });

                    // Rebind QR code buttons after updating the table
                    bindQRCodeButtons();
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Function to handle successful login
        function handleLoginSuccess() {
            document.getElementById('loginSection').style.display = 'none';
            document.getElementById('contentSection').style.display = 'block';
        }

        function loginUser(userLogin, userPassword) {
            if (!userLogin || !userPassword) {
                alert('Please enter both username and password.');
                return;
            }

            // Make a POST request to the login endpoint
            fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username: userLogin, password: userPassword }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        alert(`Login failed: ${data.error}`);
                    } else {
                        alert(`Login successful: ${data.message}`);
                        handleLoginSuccess();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function registerUser(userLogin, userPassword, confirmPassword) {

            if (!userLogin || !userPassword) {
                alert('Please enter both username and password.');
                return;
            }

            if (userPassword != confirmPassword) {
                alert('The provided passwords are different.');
                return;
            }

            // Make a POST request to the register endpoint
            fetch('/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username: userLogin, password: userPassword }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        alert(`Registration failed: ${data.error}`);
                    } else {
                        alert(`Registration successful: ${data.message}`);
                        handleLoginSuccess();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Sorting function
        function sortByCategory(category) {
            fetch(`/sort`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ sortBy: category }),
            })
                .then(response => response.json())
                .then(data => {
                    // Clear the existing table rows
                    const tableBody = document.getElementById('contacts');
                    tableBody.innerHTML = '';

                    // Populate the table with the search results
                    data.forEach(entry => {
                        const newRow = document.createElement('tr');
                        newRow.innerHTML = `
                        <td>${entry.imie}</td>
                        <td>${entry.nazwisko}</td>
                        <td>${entry.adres}</td>
                        <td><button class="btn phone-qr" style="background-color:transparent">${entry.telefon}</button></td>
                        <td>${entry.mail}</td>
                        <td>
                            <div class="text-center">
                                <button id='del{index}' class='btn btn-block' onclick="deleteUser('${entry.id}')">Delete</button>
                            </div>
                        </td>
                    `;
                        tableBody.appendChild(newRow);
                    });

                    // Rebind QR code buttons after updating the table
                    bindQRCodeButtons();
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Function to bind onclick event for QR code buttons
        function bindQRCodeButtons() {
            const btns = document.querySelectorAll(".phone-qr");
            btns.forEach(function (btn) {
                btn.onclick = function () {
                    createQRCode(btn.textContent);
                };
            });
        }

        // Call bindQRCodeButtons initially
        bindQRCodeButtons();
    </script>
</body>

</html>